version: "3.8"
services:
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
      - backend_network
    ports:
      - "5432:5432"
  nest-backend:
    container_name: loomi-ecom-api
    image: loomi-ecom-api
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 3000:3000
    environment:
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      LOCAL_HOST: ${LOCAL_HOST}
      EMAIL_JS_PUBLIC_KEY: ${EMAIL_JS_PUBLIC_KEY}
      EMAIL_JS_PRIVATE_KEY: ${EMAIL_JS_PRIVATE_KEY}
      EMAIL_JS_REGISTRATION_TEMPLATE_ID: ${EMAIL_JS_REGISTRATION_TEMPLATE_ID}
      EMAIL_JS_SERVICE_KEY: ${EMAIL_JS_SERVICE_KEY}
    networks:
      - backend_network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - db
    command: >
      sh -c "npm run migration:run && npm start"

volumes:
  postgres_data: {}

networks:
  backend_network:
    driver: bridge

# docker compose --env-file .env up